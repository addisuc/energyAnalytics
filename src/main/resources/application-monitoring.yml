# Monitoring & Observability Configuration

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,loggers,env,configprops
      base-path: /actuator
      cors:
        allowed-origins: "*"
        allowed-methods: GET,POST
  
  endpoint:
    health:
      show-details: when-authorized
      show-components: always
      probes:
        enabled: true
    metrics:
      enabled: true
    prometheus:
      enabled: true
    loggers:
      enabled: true
  
  health:
    redis:
      enabled: true
    db:
      enabled: true
    diskspace:
      enabled: true
    ping:
      enabled: true
  
  metrics:
    export:
      prometheus:
        enabled: true
        step: 30s
        descriptions: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
        spring.data.repository.invocations: true
      percentiles:
        http.server.requests: 0.5, 0.95, 0.99
        spring.data.repository.invocations: 0.5, 0.95, 0.99
    tags:
      application: energy-analytics-platform
      environment: ${ENVIRONMENT:development}
      version: ${APP_VERSION:1.0.0}

# Logging configuration for monitoring
logging:
  level:
    com.weather.service: INFO
    org.springframework.web: WARN
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
  
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%X{traceId},%X{spanId}] %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%X{traceId},%X{spanId}] %logger{36} - %msg%n"
  
  file:
    name: /var/log/energy-analytics.log
    max-size: 100MB
    max-history: 30
    total-size-cap: 1GB

# Custom monitoring properties
monitoring:
  alerts:
    enabled: true
    webhook-url: ${ALERT_WEBHOOK_URL:}
    
  performance:
    slow-query-threshold: 1000  # milliseconds
    slow-api-threshold: 2000    # milliseconds
    
  business-metrics:
    enabled: true
    collection-interval: 60     # seconds
    
  uptime:
    check-interval: 30          # seconds
    
  error-tracking:
    enabled: true
    sentry-dsn: ${SENTRY_DSN:}
    
# Tracing (for distributed tracing)
spring:
  sleuth:
    enabled: true
    sampler:
      probability: 0.1  # Sample 10% of requests
    zipkin:
      base-url: ${ZIPKIN_URL:http://localhost:9411}
      enabled: false  # Enable when Zipkin is available