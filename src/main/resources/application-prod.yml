server:
  port: 8080

spring:
  application:
    name: weather-service
  
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://timescaledb:5432/weatherdb}
    username: ${SPRING_DATASOURCE_USERNAME:weather_user}
    password: ${SPRING_DATASOURCE_PASSWORD:weather_pass}
    driver-class-name: org.postgresql.Driver
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    defer-datasource-initialization: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
  
  sql:
    init:
      mode: never
  
  redis:
    host: ${SPRING_REDIS_HOST:redis}
    port: 6379
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0

openweather:
  api:
    key: ${OPENWEATHER_API_KEY:aea9a11abb510253fd3f924f19ac2289}
    url: https://api.openweathermap.org/data/2.5

management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: always

jwt:
  secret: ${JWT_SECRET:myVerySecretKeyForJWTTokenGeneration123456789}
  expiration: ${JWT_EXPIRATION:86400000}

app:
  security:
    enabled: ${SECURITY_ENABLED:true}
  data:
    initialize: ${DATA_INITIALIZE:true}

logging:
  level:
    com.weather.service: INFO
    org.springframework.web: WARN
    org.springframework.security: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"