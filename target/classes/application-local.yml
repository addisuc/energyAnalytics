server:
  port: 8080

spring:
  application:
    name: weather-service
  
  datasource:
    url: jdbc:h2:mem:testdb
    username: sa
    password: 
    driver-class-name: org.h2.Driver
  
  h2:
    console:
      enabled: true
      path: /h2-console
  
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: true
  
  redis:
    host: localhost
    port: 6379
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0

openweather:
  api:
    key: ${OPENWEATHER_API_KEY:aea9a11abb510253fd3f924f19ac2289}
    url: https://api.openweathermap.org/data/2.5

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
      base-path: /actuator
  endpoint:
    health:
      show-details: always

jwt:
  secret: localDevSecretKey123456789
  expiration: 86400000

logging:
  level:
    com.weather.service: INFO
    org.springframework.web: WARN
    org.springframework.security: WARN
  pattern:
    console: "%d{HH:mm:ss} - %msg%n"

# Local development flags
app:
  security:
    enabled: false
  data:
    initialize: true